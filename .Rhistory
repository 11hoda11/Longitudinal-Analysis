# Linear Mixed-Effect Model Longitudinal Analysis script
# Author: Hoda Nabavi
# Date: September 15, 2020
# Make sure to load your data file and set the working directory correctly.
# User can customize the response_variable and predictor_variable.
#----------------------------------------------------------------------------------
# Load necessary libraries
library(lme4)
library(nlme)
library(lattice)
library(ggplot2)
library(lmerTest)
library(readxl)
library(openxlsx)
library(dplyr)
library(optimx)
library(sjPlot)
library(sjPlot)
# Set working directory to the location of your data files
setwd("C:\Users\hodan\Google Drive\codes\UHN\Longitudinal Analysis")
# Prompt the user to select the input data file
data_file <- file.choose()
longitudinaldata <- read_excel(data_file, col_types = 'guess')
# Preprocess data (e.g., convert units, handle missing values)
longitudinaldata$MOS.minimum_cm = longitudinaldata$MOS.minimum*100
longitudinaldata$MOS.average_cm = longitudinaldata$MOS.average*100
longitudinaldata$Walking.speedcm = longitudinaldata$Walking.speed*100
longitudinaldata$Step.lengthcm = longitudinaldata$Step.length*100
longitudinaldata$Step.widthcm = longitudinaldata$Step.width*100
longitudinaldata$CV.step.timePercent = longitudinaldata$CV.step.time*100
longitudinaldata$CV.step.lengthPercent = longitudinaldata$CV.step.length*100
longitudinaldata$CV.step.widthPercent = longitudinaldata$CV.step.width*100
longitudinaldata$SD.sacr.MLcm = longitudinaldata$SD.sacr.ML*100
longitudinaldata$RMS.sacr.ML.velocitycm = longitudinaldata$RMS.sacr.ML.velocity*100
longitudinaldata$ROM.sacr.MLcm = longitudinaldata$ROM.sacr.ML*100
longitudinaldata$timeHours = longitudinaldata$Time/3600
longitudinaldata$timeMinutes = longitudinaldata$Time/60
longitudinaldata$timeDays = longitudinaldata$Time/86400
longitudinaldata$timeWeeks = longitudinaldata$Time/(7*86400)
longitudinaldata$TIME = longitudinaldata$timeWeeks
longitudinaldata$NPI = longitudinaldata$NPIADM
longitudinaldata$MOS = longitudinaldata$MOS.average_cm
longitudinaldata[longitudinaldata==NaN] <- NA
# Separate data for different groups (non-hospitalized, hospitalized)
nonhosp = subset(longitudinaldata, Hosp. == 0, select = Hosp:timeWeeks) # non-hospitalized
hosp = subset(longitudinaldata, Hosp. == 1, select = Hosp:timeWeeks) # hospitalized
# ----------------------------------------------------------------------------------
# Modeling Section
# Define the response variable and predictor(s) you want to use
response_variable <- "MOS.minimum_cm"  # Change this to your response variable
predictor_variable <- "Age"  # Change this to your predictor variable
#-----------------------------------------------------------------------------------
# Model 1: Unconditional Means Model
model1_uncondMeans <- lmer(as.formula(paste(response_variable, "~ 1 + (1 | ID)")), data = longitudinaldata, REML = FALSE)
# Predict and visualize model 1 - unconditional means
longitudinaldata_predictions <- longitudinaldata %>%
mutate(model1_predict = predict(model1_uncondMeans))
summary(model1_uncondMeans)
# Model 2: Unconditional Growth Model
model2_uncondGrowth <- lmer(as.formula(paste(response_variable, "~ 1 + TIME + (1 + TIME | ID)")), data = longitudinaldata, REML = FALSE)
# Predict and visualize model 2 - unconditional growth
longitudinaldata_predictions <- longitudinaldata %>%
mutate(model2_predict = predict(model2_uncondGrowth))
summary(model2_uncondGrowth)
# Model 3: Adding one predictor
model3 <- lmer(as.formula(paste(response_variable, "~ 1 + TIME *", predictor_variable, "+ (1 + TIME | ID)")), data = longitudinaldata, REML = FALSE, na.action = na.omit)
# Predict and visualize model 3 - adding one predictor
pred_values <- predict(model3, re.form = NA)
longitudinaldata$predict <- pred_values
summary(model3)
View(longitudinaldata_predictions)
# Linear Mixed-Effect Model Longitudinal Analysis script
# Author: Hoda Nabavi
# Date: September 15, 2020
# Make sure to load your data file and set the working directory correctly.
# User can customize the response_variable and predictor_variable.
#----------------------------------------------------------------------------------
# Load necessary libraries
library(lme4)
library(nlme)
library(lattice)
library(ggplot2)
library(lmerTest)
library(readxl)
library(openxlsx)
library(dplyr)
library(optimx)
library(sjPlot)
library(sjPlot)
# Set working directory to the location of your data files
setwd("C:\Users\hodan\Google Drive\codes\UHN\Longitudinal Analysis")
# Prompt the user to select the input data file
data_file <- file.choose()
longitudinaldata <- read_excel(data_file, col_types = 'guess')
# Preprocess data (e.g., convert units, handle missing values)
longitudinaldata$MOS.minimum_cm = longitudinaldata$MOS.minimum*100
longitudinaldata$MOS.average_cm = longitudinaldata$MOS.average*100
longitudinaldata$Walking.speedcm = longitudinaldata$Walking.speed*100
longitudinaldata$Step.lengthcm = longitudinaldata$Step.length*100
longitudinaldata$Step.widthcm = longitudinaldata$Step.width*100
longitudinaldata$CV.step.timePercent = longitudinaldata$CV.step.time*100
longitudinaldata$CV.step.lengthPercent = longitudinaldata$CV.step.length*100
longitudinaldata$CV.step.widthPercent = longitudinaldata$CV.step.width*100
longitudinaldata$SD.sacr.MLcm = longitudinaldata$SD.sacr.ML*100
longitudinaldata$RMS.sacr.ML.velocitycm = longitudinaldata$RMS.sacr.ML.velocity*100
longitudinaldata$ROM.sacr.MLcm = longitudinaldata$ROM.sacr.ML*100
longitudinaldata$timeHours = longitudinaldata$Time/3600
longitudinaldata$timeMinutes = longitudinaldata$Time/60
longitudinaldata$timeDays = longitudinaldata$Time/86400
longitudinaldata$timeWeeks = longitudinaldata$Time/(7*86400)
longitudinaldata$TIME = longitudinaldata$timeWeeks
longitudinaldata$NPI = longitudinaldata$NPIADM
longitudinaldata$MOS = longitudinaldata$MOS.average_cm
longitudinaldata[longitudinaldata==NaN] <- NA
# Separate data for different groups (non-hospitalized, hospitalized)
nonhosp = subset(longitudinaldata, Hosp. == 0, select = Hosp:timeWeeks) # non-hospitalized
hosp = subset(longitudinaldata, Hosp. == 1, select = Hosp:timeWeeks) # hospitalized
# ----------------------------------------------------------------------------------
# Modeling Section
# Define the response variable and predictor(s) you want to use
response_variable <- "MOS.minimum_cm"  # Change this to your response variable
predictor_variable <- "Age"  # Change this to your predictor variable
#-----------------------------------------------------------------------------------
# Model 1: Unconditional Means Model
model1_uncondMeans <- lmer(as.formula(paste(response_variable, "~ 1 + (1 | ID)")), data = longitudinaldata, REML = FALSE)
# Predict and visualize model 1 - unconditional means
longitudinaldata_predictions <- longitudinaldata %>%
mutate(model1_predict = predict(model1_uncondMeans))
summary(model1_uncondMeans)
# Model 2: Unconditional Growth Model
model2_uncondGrowth <- lmer(as.formula(paste(response_variable, "~ 1 + TIME + (1 + TIME | ID)")), data = longitudinaldata, REML = FALSE)
# Predict and visualize model 2 - unconditional growth
longitudinaldata_predictions <- longitudinaldata_predictions %>%
mutate(model2_predict = predict(model2_uncondGrowth))
summary(model2_uncondGrowth)
# Model 3: Adding one predictor
model3 <- lmer(as.formula(paste(response_variable, "~ 1 + TIME *", predictor_variable, "+ (1 + TIME | ID)")), data = longitudinaldata, REML = FALSE, na.action = na.omit)
# Predict and visualize model 3 - adding one predictor
pred_values <- predict(model3, re.form = NA)
longitudinaldata$predict <- pred_values
summary(model3)
# Linear Mixed-Effect Model Longitudinal Analysis script
# Author: Hoda Nabavi
# Date: September 15, 2020
# Make sure to load your data file and set the working directory correctly.
# User can customize the response_variable and predictor_variable.
#----------------------------------------------------------------------------------
# Load necessary libraries
library(lme4)
library(nlme)
library(lattice)
library(ggplot2)
library(lmerTest)
library(readxl)
library(openxlsx)
library(dplyr)
library(optimx)
library(sjPlot)
library(sjPlot)
# Set working directory to the location of your data files
setwd("C:\Users\hodan\Google Drive\codes\UHN\Longitudinal Analysis")
# Prompt the user to select the input data file
data_file <- file.choose()
longitudinaldata <- read_excel(data_file, col_types = 'guess')
# Preprocess data (e.g., convert units, handle missing values)
longitudinaldata$MOS.minimum_cm = longitudinaldata$MOS.minimum*100
longitudinaldata$MOS.average_cm = longitudinaldata$MOS.average*100
longitudinaldata$Walking.speedcm = longitudinaldata$Walking.speed*100
longitudinaldata$Step.lengthcm = longitudinaldata$Step.length*100
longitudinaldata$Step.widthcm = longitudinaldata$Step.width*100
longitudinaldata$CV.step.timePercent = longitudinaldata$CV.step.time*100
longitudinaldata$CV.step.lengthPercent = longitudinaldata$CV.step.length*100
longitudinaldata$CV.step.widthPercent = longitudinaldata$CV.step.width*100
longitudinaldata$SD.sacr.MLcm = longitudinaldata$SD.sacr.ML*100
longitudinaldata$RMS.sacr.ML.velocitycm = longitudinaldata$RMS.sacr.ML.velocity*100
longitudinaldata$ROM.sacr.MLcm = longitudinaldata$ROM.sacr.ML*100
longitudinaldata$timeHours = longitudinaldata$Time/3600
longitudinaldata$timeMinutes = longitudinaldata$Time/60
longitudinaldata$timeDays = longitudinaldata$Time/86400
longitudinaldata$timeWeeks = longitudinaldata$Time/(7*86400)
longitudinaldata$TIME = longitudinaldata$timeWeeks
longitudinaldata$NPI = longitudinaldata$NPIADM
longitudinaldata$MOS = longitudinaldata$MOS.average_cm
longitudinaldata[longitudinaldata==NaN] <- NA
# Separate data for different groups (non-hospitalized, hospitalized)
nonhosp = subset(longitudinaldata, Hosp. == 0, select = Hosp:timeWeeks) # non-hospitalized
hosp = subset(longitudinaldata, Hosp. == 1, select = Hosp:timeWeeks) # hospitalized
# ----------------------------------------------------------------------------------
# Modeling Section
# Define the response variable and predictor(s) you want to use
response_variable <- "MOS.minimum_cm"  # Change this to your response variable
predictor_variable <- "AGE"  # Change this to your predictor variable
#-----------------------------------------------------------------------------------
# Model 1: Unconditional Means Model
model1_uncondMeans <- lmer(as.formula(paste(response_variable, "~ 1 + (1 | ID)")), data = longitudinaldata, REML = FALSE)
# Predict and visualize model 1 - unconditional means
longitudinaldata_predictions <- longitudinaldata %>%
mutate(model1_predict = predict(model1_uncondMeans))
summary(model1_uncondMeans)
# Model 2: Unconditional Growth Model
model2_uncondGrowth <- lmer(as.formula(paste(response_variable, "~ 1 + TIME + (1 + TIME | ID)")), data = longitudinaldata, REML = FALSE)
# Predict and visualize model 2 - unconditional growth
longitudinaldata_predictions <- longitudinaldata_predictions %>%
mutate(model2_predict = predict(model2_uncondGrowth))
summary(model2_uncondGrowth)
# Model 3: Adding one predictor
model3 <- lmer(as.formula(paste(response_variable, "~ 1 + TIME *", predictor_variable, "+ (1 + TIME | ID)")), data = longitudinaldata, REML = FALSE, na.action = na.omit)
# Predict and visualize model 3 - adding one predictor
pred_values <- predict(model3, re.form = NA)
longitudinaldata$predict <- pred_values
summary(model3)
View(model3)
View(model2_uncondGrowth)
View(model3)
and visualize
# Linear Mixed-Effect Model Longitudinal Analysis script
# Author: Hoda Nabavi
# Date: September 15, 2020
# Make sure to load your data file and set the working directory correctly.
# User can customize the response_variable and predictor_variable.
#----------------------------------------------------------------------------------
# Load necessary libraries
library(lme4)
library(nlme)
library(lattice)
library(ggplot2)
library(lmerTest)
library(readxl)
library(openxlsx)
library(dplyr)
library(optimx)
library(sjPlot)
library(sjPlot)
# Set working directory to the location of your data files
setwd("C:\Users\hodan\Google Drive\codes\UHN\Longitudinal Analysis")
# Prompt the user to select the input data file
data_file <- file.choose()
longitudinaldata <- read_excel(data_file, col_types = 'guess')
# Preprocess data (e.g., convert units, handle missing values)
longitudinaldata$MOS.minimum_cm = longitudinaldata$MOS.minimum*100
longitudinaldata$MOS.average_cm = longitudinaldata$MOS.average*100
longitudinaldata$Walking.speedcm = longitudinaldata$Walking.speed*100
longitudinaldata$Step.lengthcm = longitudinaldata$Step.length*100
longitudinaldata$Step.widthcm = longitudinaldata$Step.width*100
longitudinaldata$CV.step.timePercent = longitudinaldata$CV.step.time*100
longitudinaldata$CV.step.lengthPercent = longitudinaldata$CV.step.length*100
longitudinaldata$CV.step.widthPercent = longitudinaldata$CV.step.width*100
longitudinaldata$SD.sacr.MLcm = longitudinaldata$SD.sacr.ML*100
longitudinaldata$RMS.sacr.ML.velocitycm = longitudinaldata$RMS.sacr.ML.velocity*100
longitudinaldata$ROM.sacr.MLcm = longitudinaldata$ROM.sacr.ML*100
longitudinaldata$timeHours = longitudinaldata$Time/3600
longitudinaldata$timeMinutes = longitudinaldata$Time/60
longitudinaldata$timeDays = longitudinaldata$Time/86400
longitudinaldata$timeWeeks = longitudinaldata$Time/(7*86400)
longitudinaldata$TIME = longitudinaldata$timeWeeks
longitudinaldata$NPI = longitudinaldata$NPIADM
longitudinaldata$MOS = longitudinaldata$MOS.average_cm
longitudinaldata[longitudinaldata==NaN] <- NA
# Separate data for different groups (non-hospitalized, hospitalized)
nonhosp = subset(longitudinaldata, Hosp. == 0, select = Hosp:timeWeeks) # non-hospitalized
hosp = subset(longitudinaldata, Hosp. == 1, select = Hosp:timeWeeks) # hospitalized
# ----------------------------------------------------------------------------------
# Modeling Section
# Define the response variable and predictor(s) you want to use
response_variable <- "MOS.minimum_cm"  # Change this to your response variable
predictor_variable <- "AGE"  # Change this to your predictor variable
#-----------------------------------------------------------------------------------
# Model 1: Unconditional Means Model
model1_uncondMeans <- lmer(as.formula(paste(response_variable, "~ 1 + (1 | ID)")), data = longitudinaldata, REML = FALSE)
# Predict and visualize model 1 - unconditional means
longitudinaldata_predictions <- longitudinaldata %>%
mutate(model1_predict = predict(model1_uncondMeans))
summary(model1_uncondMeans)
# Model 2: Unconditional Growth Model
model2_uncondGrowth <- lmer(as.formula(paste(response_variable, "~ 1 + TIME + (1 + TIME | ID)")), data = longitudinaldata, REML = FALSE)
# Predict and visualize model 2 - unconditional growth
longitudinaldata_predictions <- longitudinaldata_predictions %>%
mutate(model2_predict = predict(model2_uncondGrowth))
summary(model2_uncondGrowth)
# Model 3: Adding one predictor
model3 <- lmer(as.formula(paste(response_variable, "~ 1 + TIME *", predictor_variable, "+ (1 + TIME | ID)")), data = longitudinaldata, REML = FALSE, na.action = na.omit)
# Predict and visualize model 3 - adding one predictor
longitudinaldata_predictions <- longitudinaldata_predictions %>%
mutate(model3_predict = predict(model3))
summary(model3)
pred_values = predict(model3, re.form = NA) # generate prediction values based on the model3
longitudinaldata$predict = pred_values
View(longitudinaldata)
# Linear Mixed-Effect Model Longitudinal Analysis script
# Author: Hoda Nabavi
# Date: September 15, 2020
# Make sure to load your data file and set the working directory correctly.
# User can customize the response_variable and predictor_variable.
#----------------------------------------------------------------------------------
# Load necessary libraries
library(lme4)
library(nlme)
library(lattice)
library(ggplot2)
library(lmerTest)
library(readxl)
library(openxlsx)
library(dplyr)
library(optimx)
library(sjPlot)
library(sjPlot)
# Set working directory to the location of your data files
setwd("C:\Users\hodan\Google Drive\codes\UHN\Longitudinal Analysis")
# Prompt the user to select the input data file
data_file <- file.choose()
longitudinaldata <- read_excel(data_file, col_types = 'guess')
# Preprocess data (e.g., convert units, handle missing values)
longitudinaldata$MOS.minimum_cm = longitudinaldata$MOS.minimum*100
longitudinaldata$MOS.average_cm = longitudinaldata$MOS.average*100
longitudinaldata$Walking.speedcm = longitudinaldata$Walking.speed*100
longitudinaldata$Step.lengthcm = longitudinaldata$Step.length*100
longitudinaldata$Step.widthcm = longitudinaldata$Step.width*100
longitudinaldata$CV.step.timePercent = longitudinaldata$CV.step.time*100
longitudinaldata$CV.step.lengthPercent = longitudinaldata$CV.step.length*100
longitudinaldata$CV.step.widthPercent = longitudinaldata$CV.step.width*100
longitudinaldata$SD.sacr.MLcm = longitudinaldata$SD.sacr.ML*100
longitudinaldata$RMS.sacr.ML.velocitycm = longitudinaldata$RMS.sacr.ML.velocity*100
longitudinaldata$ROM.sacr.MLcm = longitudinaldata$ROM.sacr.ML*100
longitudinaldata$timeHours = longitudinaldata$Time/3600
longitudinaldata$timeMinutes = longitudinaldata$Time/60
longitudinaldata$timeDays = longitudinaldata$Time/86400
longitudinaldata$timeWeeks = longitudinaldata$Time/(7*86400)
longitudinaldata$TIME = longitudinaldata$timeWeeks
longitudinaldata$NPI = longitudinaldata$NPIADM
longitudinaldata$MOS = longitudinaldata$MOS.average_cm
longitudinaldata[longitudinaldata==NaN] <- NA
# Separate data for different groups (non-hospitalized, hospitalized)
nonhosp = subset(longitudinaldata, Hosp. == 0, select = Hosp:timeWeeks) # non-hospitalized
hosp = subset(longitudinaldata, Hosp. == 1, select = Hosp:timeWeeks) # hospitalized
# ----------------------------------------------------------------------------------
# Modeling Section
# Define the response variable and predictor(s) you want to use
response_variable <- "MOS.minimum_cm"  # Change this to your response variable
predictor_variable <- "AGE"  # Change this to your predictor variable
#-----------------------------------------------------------------------------------
# Model 1: Unconditional Means Model
model1_uncondMeans <- lmer(as.formula(paste(response_variable, "~ 1 + (1 | ID)")), data = longitudinaldata, REML = FALSE)
# Predict and visualize model 1 - unconditional means
longitudinaldata_predictions <- longitudinaldata %>%
mutate(model1_predict = predict(model1_uncondMeans))
summary(model1_uncondMeans)
# Model 2: Unconditional Growth Model
model2_uncondGrowth <- lmer(as.formula(paste(response_variable, "~ 1 + TIME + (1 + TIME | ID)")), data = longitudinaldata, REML = FALSE)
# Predict and visualize model 2 - unconditional growth
longitudinaldata_predictions <- longitudinaldata_predictions %>%
mutate(model2_predict = predict(model2_uncondGrowth))
summary(model2_uncondGrowth)
# Model 3: Adding one predictor
model3 <- lmer(as.formula(paste(response_variable, "~ 1 + TIME *", predictor_variable, "+ (1 + TIME | ID)")), data = longitudinaldata, REML = FALSE, na.action = na.omit)
# Predict and visualize model 3 - adding one predictor
longitudinaldata_predictions <- longitudinaldata_predictions %>%
mutate(model3_predict = predict(model3, re.form = NA))
summary(model3)
View(longitudinaldata_predictions)
View(longitudinaldata_predictions)
plot_model(model2_uncondGrowth, type ="est", colors = c("black"),line.size = 1)+
ylab("eMOS (cm)") +
xlab("Time (weeks)") +
theme_bw(base_size = 16) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
plot_model(model2_uncondGrowth, type ="est", colors = c("black"),line.size = 1)+
ylab("eMOS (cm)") +
xlab("Time (weeks)") +
theme_bw(base_size = 16) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
plot_model(model2_uncondGrowth, type ="est", colors = c("black"),line.size = 1)+
ylab("eMOS (cm)") +
xlab("Time (weeks)") +
theme_bw(base_size = 16) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
tiff("Figure2D.tiff", units="in", width=5, height=5, res=300)
plot_model(model3,  type = "int", colors = c("black", "grey"),line.size = 1, mdrt.values = "minmax")+
ylab("Step width CV (%)") +
xlab("Time (weeks)") +
theme_bw(base_size = 16) +
scale_colour_manual(labels = c("Low NPI","High NPI"),values=c("black","grey"))+
scale_fill_grey()+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),legend.position = c(.25,.8),legend.title = element_blank(),legend.text = element_text(size=12),legend.key.size = unit(.6, "cm"))
dev.off()
tiff("Figure2D.tiff", units="in", width=5, height=5, res=300)
plot_model(model3,  type = "int", colors = c("black", "grey"),line.size = 1, mdrt.values = "minmax")+
ylab("Step width CV (%)") +
xlab("Time (weeks)") +
theme_bw(base_size = 16) +
scale_colour_manual(labels = c("Low NPI","High NPI"),values=c("black","grey"))+
scale_fill_grey()+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),legend.position = c(.25,.8),legend.title = element_blank(),legend.text = element_text(size=12),legend.key.size = unit(.6, "cm"))
dev.off()
tiff("Figure2D.tiff", units="in", width=5, height=5, res=300)
plot_model(model3,  type = "int", colors = c("black", "grey", "red"),line.size = 1, mdrt.values = "minmax")+
ylab("Step width CV (%)") +
xlab("Time (weeks)") +
theme_bw(base_size = 16) +
scale_colour_manual(labels = c("Low NPI","High NPI"),values=c("black","grey"))+
scale_fill_grey()+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),legend.position = c(.25,.8),legend.title = element_blank(),legend.text = element_text(size=12),legend.key.size = unit(.6, "cm"))
dev.off()
tiff("Figure2D.tiff", units="in", width=5, height=5, res=300)
plot_model(model3,  type = "int", colors = c("black", "grey", "red"),line.size = 1, mdrt.values = "minmax")+
ylab("Step width CV (%)") +
xlab("Time (weeks)") +
theme_bw(base_size = 16) +
#scale_colour_manual(labels = c("Low NPI","High NPI"),values=c("black","grey"))+
scale_fill_grey()+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),legend.position = c(.25,.8),legend.title = element_blank(),legend.text = element_text(size=12),legend.key.size = unit(.6, "cm"))
dev.off()
